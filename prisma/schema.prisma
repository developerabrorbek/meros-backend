datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator meros_client {
  provider = "prisma-client-js"
}

enum TranslateType {
  error   @map("error")
  content @map("content")

  @@map("translate_type")
}

enum BannerPriority {
  first  @map("first")
  second @map("second")
  third  @map("third")
  fourth @map("fourth")
  fifth  @map("fifth")
}

enum Status {
  active   @map("active")
  inactive @map("inactive")
}

model Language {
  id         String       @default(dbgenerated("GEN_RANDOM_UUID()")) @map("id") @db.Uuid
  code       String       @map("code") @db.VarChar(2)
  title      String       @map("title") @db.VarChar(64)
  definition Definition[]

  @@id([id])
  @@unique([code])
  @@map("language")
}

model Translate {
  id         String        @default(dbgenerated("GEN_RANDOM_UUID()")) @map("id") @db.Uuid
  code       String        @map("code") @db.VarChar()
  type       TranslateType @map("type")
  definition Definition[]

  @@id([id])
  @@unique([code])
  @@map("translate")
}

model Definition {
  id          String @default(dbgenerated("GEN_RANDOM_UUID()")) @map("id") @db.Uuid
  translateId String @map("translate_id") @db.Uuid
  languageId  String @map("language_id") @db.Uuid
  value       String @map("value") @db.VarChar()

  translate Translate @relation(fields: [translateId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  language  Language  @relation(fields: [languageId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([id])
  @@map("definition")
}

model Banner {
  id     String @default(dbgenerated("GEN_RANDOM_UUID()")) @map("id") @db.Uuid
  image  String @db.VarChar()
  status String @map("status")

  @@id([id])
  @@map("banner")
}

model Category {
  id          String     @default(dbgenerated("GEN_RANDOM_UUID()")) @map("id") @db.Uuid
  name        String     @map("name") @db.Uuid
  subcategory Category[] @relation("subcategory")
  category    Category?  @relation("subcategory", fields: [parentId], references: [id])
  parentId    String?    @map("parent_id") @db.Uuid
  product     Product[]

  @@id([id])
  @@map("category")
}

model Product {
  id          String   @default(dbgenerated("GEN_RANDOM_UUID()")) @map("id") @db.Uuid
  title       String   @map("title") @db.Uuid
  images      String[] @map("images")
  rating      String   @map("rating") @db.VarChar(4)
  count       Int      @map("count") @db.Integer
  description String   @map("description") @db.Uuid
  price       Int      @map("price") @db.Integer
  sale        Int      @map("sale") @db.Integer
  categoryId  String   @map("category_id") @db.Uuid

  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([id])
  @@map("product")
}
